import numpy as np

#0으로 초기화 된 3X5 배열
arr_2d = np.zeros((3, 5))
print(arr_2d)
'''
[[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
'''

#1로 초기화 된 2X4 3D 배열
arr_float_3D = np.ones((3, 2, 4))
print(arr_float_3D)
'''
[[[1. 1. 1. 1.]
  [1. 1. 1. 1.]]

 [[1. 1. 1. 1.]
  [1. 1. 1. 1.]]

 [[1. 1. 1. 1.]
  [1. 1. 1. 1.]]]
'''

#배열을 잘라 첫 번째 채널의 색상 정보 획득
print(arr_float_3D[0, :, :])
'''
[[1. 1. 1. 1.]
 [1. 1. 1. 1.]]
'''

#openCV 이미지의 색상 표현 방법
#1. 0~1 사이의 값을 갖는 32비트 부동소수점 배열
#[2. 0~255 사이의 값을 갖는 8비트 정수 배열]
arr_uint_3d = np.ones((3, 2, 4), dtype=np.uint8) * 255
print(arr_uint_3d)
'''
2X4 픽셀의 완전한 흰색

[[[255 255 255 255]
  [255 255 255 255]]

 [[255 255 255 255]
  [255 255 255 255]]

 [[255 255 255 255]
  [255 255 255 255]]]
'''